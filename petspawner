-- üü¢ GUI Remote Logger (Delta Emulator Compatible)
local player = game:GetService("Players").LocalPlayer

-- GUI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "DeltaRemoteLogger"

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 500, 0, 300)
frame.Position = UDim2.new(0, 20, 0, 20)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0

local scrollingText = Instance.new("TextLabel", frame)
scrollingText.Size = UDim2.new(1, 0, 1, 0)
scrollingText.BackgroundTransparency = 1
scrollingText.TextColor3 = Color3.fromRGB(0, 255, 0)
scrollingText.TextXAlignment = Enum.TextXAlignment.Left
scrollingText.TextYAlignment = Enum.TextYAlignment.Top
scrollingText.Font = Enum.Font.Code
scrollingText.TextSize = 14
scrollingText.Text = "üîç Remote Logger Ready...\n"
scrollingText.TextWrapped = true
scrollingText.TextScaled = false
scrollingText.ClipsDescendants = true

-- Logging Function
local function log(text)
	scrollingText.Text = scrollingText.Text .. text .. "\n"
end

-- Hook function
local function hookRemote(remote)
	local path = remote:GetFullName()
	if remote:IsA("RemoteEvent") then
		remote.OnClientEvent:Connect(function(...)
			log("üì° RemoteEvent: " .. path)
		end)
	elseif remote:IsA("RemoteFunction") then
		remote.OnClientInvoke = function(...)
			log("üì° RemoteFunction: " .. path)
		end
	end
end

-- Monitor services
local servicesToCheck = {
	game:GetService("ReplicatedStorage"),
	game:GetService("Workspace"),
	game:GetService("StarterPlayer")
}

for _, service in ipairs(servicesToCheck) do
	for _, desc in ipairs(service:GetDescendants()) do
		if desc:IsA("RemoteEvent") or desc:IsA("RemoteFunction") then
			hookRemote(desc)
		end
	end
	service.DescendantAdded:Connect(function(obj)
		if obj:IsA("RemoteEvent") or obj:IsA("RemoteFunction") then
			hookRemote(obj)
		end
	end)
end

log("‚úÖ Logger loaded. Trigger any pet action to detect.")
