-- ‚úÖ Final MoonCat Freezer - Stops movement but ensures passive abilities remain active

local player = game:GetService("Players").LocalPlayer
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "FreezeLog"
screenGui.ResetOnSpawn = false

local logBox = Instance.new("TextLabel", screenGui)
logBox.Size = UDim2.new(0, 500, 0, 400)
logBox.Position = UDim2.new(0, 20, 0, 20)
logBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
logBox.TextColor3 = Color3.fromRGB(0, 255, 0)
logBox.Font = Enum.Font.Code
logBox.TextSize = 14
logBox.TextXAlignment = Enum.TextXAlignment.Left
logBox.TextYAlignment = Enum.TextYAlignment.Top
logBox.TextWrapped = true
logBox.Text = ""

local function log(msg)
    logBox.Text = logBox.Text .. msg .. "\n"
end

local function freezeMoonCatsProperly()
    local petsFolder = workspace:FindFirstChild("PetsPhysical")
    if not petsFolder then return log("‚ùå PetsPhysical not found") end

    local mover = petsFolder:FindFirstChild("PetMover")
    if not mover then return log("‚ùå PetMover not found") end

    local frozenCount = 0
    for _, cat in pairs(mover:GetChildren()) do
        if cat:IsA("Model") and cat.Name == "Cat" then
            frozenCount += 1
            log("üêæ Freezing MoonCat #" .. frozenCount)

            local root = cat:FindFirstChild("RootPart") or cat.PrimaryPart or cat:FindFirstChildWhichIsA("BasePart")
            if root then
                -- Freeze the MoonCat
                for _, part in pairs(cat:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Anchored = true -- Stops movement
                        part.CanCollide = false
                        part:SetNetworkOwner(nil)
                    elseif part:IsA("Humanoid") then
                        part.WalkSpeed = 0 -- Prevents walking
                        part.JumpPower = 0 -- Prevents jumping
                    elseif part:IsA("Motor6D") then
                        part:Destroy() -- Stops limb movement
                    elseif part:IsA("Animator") or part:IsA("AnimationController") then
                        part:Destroy() -- Stops animations
                    end
                end

                -- Keep passive ability scripts active
                for _, script in pairs(cat:GetChildren()) do
                    if script:IsA("Script") or script:IsA("LocalScript") then
                        script.Disabled = false -- Ensures passives remain functional
                    end
                end

                log("‚úÖ MoonCat #" .. frozenCount .. " frozen but passive abilities active.")
            end
        end
    end

    if frozenCount == 0 then
        log("‚ö†Ô∏è No MoonCats found to freeze.")
    else
        log("üéâ Finished freezing " .. frozenCount .. " MoonCats.")
    end
end

freezeMoonCatsProperly()
