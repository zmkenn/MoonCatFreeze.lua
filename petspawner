-- 🧊 Lightweight On-Screen Remote Logger

-- Check executor support
if not getrawmetatable or not getnamecallmethod then
    return warn("❌ Your executor doesn't support required functions.")
end

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local player = Players.LocalPlayer

-- GUI Setup
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "RemoteLoggerLite"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 500, 0, 240)
frame.Position = UDim2.new(0.5, -250, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local uiCorner = Instance.new("UICorner", frame)
uiCorner.CornerRadius = UDim.new(0, 6)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 28)
title.Text = "📡 Remote Logger (Lite)"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20

local logBox = Instance.new("TextBox", frame)
logBox.Position = UDim2.new(0, 5, 0, 30)
logBox.Size = UDim2.new(1, -10, 1, -35)
logBox.MultiLine = true
logBox.TextWrapped = true
logBox.TextXAlignment = Enum.TextXAlignment.Left
logBox.TextYAlignment = Enum.TextYAlignment.Top
logBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
logBox.TextColor3 = Color3.fromRGB(200, 255, 200)
logBox.Font = Enum.Font.Code
logBox.TextSize = 14
logBox.ClearTextOnFocus = false
logBox.TextEditable = false
logBox.Text = ""

local MAX_LINES = 50
local logs = {}

local function addLog(text)
    table.insert(logs, 1, text)
    if #logs > MAX_LINES then
        table.remove(logs)
    end
    logBox.Text = table.concat(logs, "\n")
end

-- Hook Remotes
local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    if (method == "FireServer" or method == "InvokeServer") and typeof(self) == "Instance" then
        local args = {...}
        local path = self:GetFullName()
        local success, encoded = pcall(function()
            return HttpService:JSONEncode(args)
        end)
        if success then
            addLog("[" .. method .. "] " .. path .. "\nArgs: " .. encoded)
        else
            addLog("[" .. method .. "] " .. path .. "\nArgs: (encoding failed)")
        end
    end
    return old(self, ...)
end)

setreadonly(mt, true)

addLog("✅ Remote Logger Lite started")
