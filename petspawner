local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer

-- GUI
local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "RemoteSpyGui"

local logBox = Instance.new("TextLabel", gui)
logBox.Size = UDim2.new(0, 800, 0, 500)
logBox.Position = UDim2.new(0, 100, 0, 100)
logBox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
logBox.TextColor3 = Color3.fromRGB(0, 255, 0)
logBox.Font = Enum.Font.Code
logBox.TextSize = 14
logBox.TextXAlignment = Enum.TextXAlignment.Left
logBox.TextYAlignment = Enum.TextYAlignment.Top
logBox.TextWrapped = true
logBox.TextScaled = false
logBox.Text = "üõ∞Ô∏è Hooking RemoteEvents...\n"

local function log(str)
	if #logBox.Text > 10000 then
		logBox.Text = "üõ∞Ô∏è Log cleared due to length\n"
	end
	logBox.Text = logBox.Text .. str .. "\n"
end

-- Hook RemoteEvents & Functions
for _, v in pairs(ReplicatedStorage:GetDescendants()) do
	if v:IsA("RemoteEvent") or v:IsA("RemoteFunction") then
		if not v:FindFirstChild("AlreadyHooked") then
			local tag = Instance.new("BoolValue")
			tag.Name = "AlreadyHooked"
			tag.Parent = v

			local name = v:GetFullName()
			log("‚úÖ Hooked: " .. name)

			if v:IsA("RemoteEvent") then
				local oldFire = v.FireServer
				v.FireServer = function(self, ...)
					local args = {...}
					log("üì§ Event: " .. name)
					for i, arg in ipairs(args) do
						log("  [" .. i .. "]: " .. tostring(arg))
					end
					return oldFire(self, unpack(args))
				end
			elseif v:IsA("RemoteFunction") then
				local oldInvoke = v.InvokeServer
				v.InvokeServer = function(self, ...)
					local args = {...}
					log("üì§ Function: " .. name)
					for i, arg in ipairs(args) do
						log("  [" .. i .. "]: " .. tostring(arg))
					end
					return oldInvoke(self, unpack(args))
				end
			end
		end
	end
end

log("‚úÖ All available Remotes hooked.\nüëâ Now: Hatch pets, give them, or equip them. Watch for logs.")
