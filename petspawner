-- ‚úÖ GUI-Based MoonCat Freezer with Passive Anchoring Fix Attempt

local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- ‚úÖ GUI Log Printer
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "LogPrinterGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local logBox = Instance.new("TextLabel")
logBox.Size = UDim2.new(0, 500, 0, 400)
logBox.Position = UDim2.new(0, 20, 0, 20)
logBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
logBox.TextColor3 = Color3.fromRGB(0, 255, 0)
logBox.TextXAlignment = Enum.TextXAlignment.Left
logBox.TextYAlignment = Enum.TextYAlignment.Top
logBox.TextWrapped = true
logBox.TextScaled = false
logBox.Font = Enum.Font.Code
logBox.TextSize = 14
logBox.Text = ""
logBox.Parent = screenGui

local function log(text)
	logBox.Text = logBox.Text .. text .. "\n"
end

local function freezeAllMoonCats()
	local pets = workspace:FindFirstChild("PetsPhysical")
	if not pets then
		log("‚ùå PetsPhysical not found in workspace")
		return
	end

	local mover = pets:FindFirstChild("PetMover")
	if not mover then
		log("‚ùå PetMover not found inside PetsPhysical")
		return
	end

	for _, model in ipairs(mover:GetChildren()) do
		if model:IsA("Model") and model.Name == "Cat" then
			log("\nüì¶ Freezing MoonCat: " .. model:GetFullName())

			-- Anchor and lock everything inside the model
			for _, part in ipairs(model:GetDescendants()) do
				if part:IsA("BasePart") then
					part.Anchored = true
					part.CanCollide = false
					part:SetNetworkOwner(nil)
				end
			end

			-- Force model to stay in place
			local root = model:FindFirstChild("RootPart") or model:FindFirstChildWhichIsA("BasePart")
			if root then
				model.PrimaryPart = root
				model:SetPrimaryPartCFrame(root.CFrame)
			end
		end
	end
end

freezeAllMoonCats()
