-- ‚úÖ RemoteEvent Logger for Duplication Testing
-- Logs all RemoteEvents and RemoteFunctions from ReplicatedStorage

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- ‚úÖ GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RemoteLoggerGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local logBox = Instance.new("TextLabel")
logBox.Size = UDim2.new(0, 600, 0, 400)
logBox.Position = UDim2.new(0, 20, 0, 20)
logBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
logBox.TextColor3 = Color3.fromRGB(0, 255, 0)
logBox.TextXAlignment = Enum.TextXAlignment.Left
logBox.TextYAlignment = Enum.TextYAlignment.Top
logBox.TextWrapped = true
logBox.TextScaled = false
logBox.Font = Enum.Font.Code
logBox.TextSize = 14
logBox.Text = ""
logBox.Parent = screenGui

local function log(text)
    logBox.Text = logBox.Text .. text .. "\n"
end

-- ‚úÖ Hook Remotes
local function hookRemote(obj)
    if obj:IsA("RemoteEvent") then
        local name = obj:GetFullName()
        log("üì° Hooked RemoteEvent: " .. name)
        local original = obj.FireServer
        obj.FireServer = function(self, ...)
            log("üöÄ Fired: " .. name .. " | Args: " .. tostring(...))
            return original(self, ...)
        end
    elseif obj:IsA("RemoteFunction") then
        local name = obj:GetFullName()
        log("üì° Hooked RemoteFunction: " .. name)
        local original = obj.InvokeServer
        obj.InvokeServer = function(self, ...)
            log("üîÅ Invoked: " .. name .. " | Args: " .. tostring(...))
            return original(self, ...)
        end
    end
end

-- ‚úÖ Initial Hook
for _, v in pairs(ReplicatedStorage:GetDescendants()) do
    hookRemote(v)
end

-- ‚úÖ Hook New Descendants
ReplicatedStorage.DescendantAdded:Connect(function(obj)
    task.wait()
    hookRemote(obj)
end)

log("‚úÖ Remote Logger Loaded. Press a pet-giving button or trigger in-game events.")
