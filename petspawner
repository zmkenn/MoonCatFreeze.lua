local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

local gui = Instance.new("ScreenGui")
gui.Name = "EventLoggerUI"
gui.Parent = player:WaitForChild("PlayerGui")

local logFrame = Instance.new("ScrollingFrame", gui)
logFrame.Size = UDim2.new(0, 600, 0, 300)
logFrame.Position = UDim2.new(0, 20, 0, 20)
logFrame.BackgroundColor3 = Color3.new(0, 0, 0)
logFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
logFrame.ScrollBarThickness = 8

local layout = Instance.new("UIListLayout", logFrame)
layout.SortOrder = Enum.SortOrder.LayoutOrder

local function log(message)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 0, 20)
	label.Text = "ðŸ“¡ " .. message
	label.TextColor3 = Color3.fromRGB(0, 255, 0)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Code
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = logFrame
end

local function hook(obj)
	if obj:IsA("RemoteEvent") then
		local name = obj:GetFullName()
		log("Hooked RemoteEvent: " .. name)
		obj.OnClientEvent:Connect(function(...)
			log("ðŸ”¥ Event Triggered: " .. name)
		end)
	elseif obj:IsA("RemoteFunction") then
		local name = obj:GetFullName()
		log("Hooked RemoteFunction: " .. name)
	end
end

-- Hook all existing
for _, v in pairs(ReplicatedStorage:GetDescendants()) do
	pcall(hook, v)
end

-- Hook new ones
ReplicatedStorage.DescendantAdded:Connect(function(v)
	task.wait()
	pcall(hook, v)
end)

log("âœ… Logger active. Do a pet action now.")
