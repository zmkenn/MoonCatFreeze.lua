-- 📺 On-Screen Remote Logger GUI for Delta or Synapse

-- Check executor support
if not getrawmetatable or not getnamecallmethod then
    return warn("❌ Your executor doesn't support required functions.")
end

-- Setup GUI
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "RemoteLoggerGUI"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 500, 0, 300)
frame.Position = UDim2.new(0.5, -250, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Active = true
frame.Draggable = true

local uiCorner = Instance.new("UICorner", frame)
uiCorner.CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "📡 Remote Logger"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.TextSize = 22

local scrolling = Instance.new("ScrollingFrame", frame)
scrolling.Position = UDim2.new(0, 0, 0, 30)
scrolling.Size = UDim2.new(1, 0, 1, -30)
scrolling.CanvasSize = UDim2.new(0, 0, 0, 0)
scrolling.ScrollBarThickness = 6
scrolling.AutomaticCanvasSize = Enum.AutomaticSize.Y
scrolling.BackgroundTransparency = 0.2
scrolling.BackgroundColor3 = Color3.fromRGB(45, 45, 45)

local layout = Instance.new("UIListLayout", scrolling)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 4)

-- Logging function
local function logToGUI(text)
    local label = Instance.new("TextLabel", scrolling)
    label.Text = text
    label.Size = UDim2.new(1, -10, 0, 24)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextColor3 = Color3.fromRGB(200, 255, 200)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Code
    label.TextSize = 16
end

-- Remote Hook
local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    if method == "FireServer" or method == "InvokeServer" then
        local args = {...}
        local info = "📤 " .. method .. " → " .. self:GetFullName()
        if #args > 0 then
            local success, result = pcall(function()
                return game:GetService("HttpService"):JSONEncode(args)
            end)
            if success then
                info = info .. "\n   Args: " .. result
            end
        end
        logToGUI(info)
    end
    return old(self, ...)
end)

setreadonly(mt, true)

logToGUI("✅ Remote Logger GUI started")
