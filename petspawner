-- üê∏ Frog Cloner (integer Age, decimal Weight)
local PET_MOVER = workspace:FindFirstChild("PetsPhysical") and workspace.PetsPhysical:FindFirstChild("PetMover")
if not PET_MOVER then
    warn("‚ùå Could not find workspace.PetsPhysical.PetMover")
    return
end

-- Configuration: new values for the clone
local ORIGINAL_NAME = "Frog"
local NEW_AGE     = 5      -- must be integer
local NEW_WEIGHT  = 4.55   -- can be decimal

local function clonePet()
    for _, pet in ipairs(PET_MOVER:GetChildren()) do
        if pet:IsA("Model") and pet.Name == ORIGINAL_NAME then
            local c = pet:Clone()
            c.Name = ORIGINAL_NAME .. "_Clone"

            -- Set Age (integer)
            local ageVal = c:FindFirstChild("Age")
            if ageVal and ageVal:IsA("NumberValue") then
                ageVal.Value = NEW_AGE
            end

            -- Set Weight (decimal)
            local weightVal = c:FindFirstChild("Weight")
            if weightVal and weightVal:IsA("NumberValue") then
                weightVal.Value = NEW_WEIGHT
            end

            -- Parent it so it appears in the world
            c.Parent = PET_MOVER

            print(("‚úÖ Cloned %s ‚Üí %s (Age=%d, Weight=%.2f)"):format(ORIGINAL_NAME, c.Name, NEW_AGE, NEW_WEIGHT))
            return
        end
    end
    warn("‚ùå Original pet '"..ORIGINAL_NAME.."' not found")
end

clonePet()
