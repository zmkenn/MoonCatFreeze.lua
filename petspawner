-- ‚úÖ Full Pet Scanner + RemoteEvent Logger
-- Logs pets and intercepts remote calls possibly involving UUIDs

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- ‚úÖ GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PetRemoteSpyGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local logBox = Instance.new("TextLabel")
logBox.Size = UDim2.new(0, 700, 0, 400)
logBox.Position = UDim2.new(0, 20, 0, 20)
logBox.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
logBox.TextColor3 = Color3.fromRGB(0, 255, 0)
logBox.TextXAlignment = Enum.TextXAlignment.Left
logBox.TextYAlignment = Enum.TextYAlignment.Top
logBox.TextWrapped = true
logBox.TextScaled = false
logBox.Font = Enum.Font.Code
logBox.TextSize = 14
logBox.Text = "üîç Scanning PetsPhysical & Listening for RemoteEvents...\n"
logBox.Parent = screenGui

local function log(text)
    logBox.Text = logBox.Text .. text .. "\n"
end

-- üîé Step 1: Scan for all pets in PetsPhysical
local function scanFolder(folder)
    for _, model in ipairs(folder:GetDescendants()) do
        if model:IsA("Model") then
            log("--- üêæ " .. model:GetFullName())
            for _, child in ipairs(model:GetChildren()) do
                if child:IsA("StringValue") or child:IsA("IntValue") or child:IsA("NumberValue") or child:IsA("ObjectValue") then
                    log("üîπ " .. child.Name .. " = " .. tostring(child.Value))
                end
            end
        end
    end
end

local function scanAll()
    local petFolder = Workspace:FindFirstChild("PetsPhysical")
    if petFolder then
        scanFolder(petFolder)
    else
        log("‚ùå PetsPhysical not found in Workspace.")
    end
end

-- üîÅ Repeat scan every 5s
scanAll()
task.spawn(function()
    while task.wait(5) do
        scanAll()
    end
end)

-- üéØ Step 2: Hook all remotes in ReplicatedStorage
local function hookRemotes()
    for _, v in pairs(ReplicatedStorage:GetDescendants()) do
        if v:IsA("RemoteEvent") or v:IsA("RemoteFunction") then
            local original = v[v:IsA("RemoteEvent") and "FireServer" or "InvokeServer"]
            local method = v:IsA("RemoteEvent") and "FireServer" or "InvokeServer"
            v[method] = function(self, ...)
                local args = {...}
                local str = "üì§ " .. v:GetFullName() .. " called with:"
                for i, a in ipairs(args) do
                    str = str .. "\n   [" .. i .. "]: " .. tostring(a)
                end
                log(str)
                return original(self, ...)
            end
        end
    end
end

hookRemotes()
log("‚úÖ Listening for pet-related remote activity...")
