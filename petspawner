-- ‚úÖ Pet UUID Logger GUI
-- Displays pet UUIDs, names, weights, and ages if available.

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- ‚úÖ GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PetUUIDLoggerGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local logBox = Instance.new("TextLabel")
logBox.Size = UDim2.new(0, 600, 0, 400)
logBox.Position = UDim2.new(0, 20, 0, 20)
logBox.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
logBox.TextColor3 = Color3.fromRGB(0, 255, 0)
logBox.TextXAlignment = Enum.TextXAlignment.Left
logBox.TextYAlignment = Enum.TextYAlignment.Top
logBox.TextWrapped = true
logBox.TextScaled = false
logBox.Font = Enum.Font.Code
logBox.TextSize = 14
logBox.Text = "üîç Scanning pets for UUIDs...\n"
logBox.Parent = screenGui

local function log(text)
    logBox.Text = logBox.Text .. text .. "\n"
end

local function scanPets()
    for _, pet in pairs(Workspace:GetDescendants()) do
        if pet:IsA("Model") and pet.Name:lower():find("pet") then
            local uuid = pet:FindFirstChild("UUID") or pet:FindFirstChild("PetID") or pet:FindFirstChild("UniqueID")
            local age = pet:FindFirstChild("Age")
            local weight = pet:FindFirstChild("Weight")
            if uuid then
                log("üêæ Pet: " .. pet.Name ..
                    " | UUID: " .. tostring(uuid.Value) ..
                    (age and (" | Age: " .. tostring(age.Value)) or "") ..
                    (weight and (" | KG: " .. tostring(weight.Value)) or ""))
            end
        end
    end
end

-- Scan once and then again every few seconds
scanPets()
task.spawn(function()
    while task.wait(5) do
        scanPets()
    end
end)

log("‚úÖ UUID Logger is running...")
