local RunService = game:GetService("RunService")

-- Store frozen pet positions
local frozenPetPositions = {}

-- Freezer helper
local function freezePart(part)
	local cf = part.CFrame
	RunService.Heartbeat:Connect(function()
		if part and part.Parent then
			part.CFrame = cf
			part.Velocity = Vector3.zero
			part.RotVelocity = Vector3.zero
		end
	end)
end

-- Freeze existing Cats and Zones
for _, obj in pairs(workspace:GetDescendants()) do
	if obj:IsA("Model") and obj.Name == "Cat" then
		local root = obj.PrimaryPart or obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChildWhichIsA("BasePart")
		if root then
			freezePart(root)
			table.insert(frozenPetPositions, root.Position)
		end
	elseif obj:IsA("BasePart") and obj.Name == "Zone" and obj.Parent and obj.Parent.Name == "PetMover" then
		freezePart(obj)
	end
end

-- Watch for new pets or zones
workspace.DescendantAdded:Connect(function(child)
	task.wait(0.2)
	if child:IsA("Model") and child.Name == "Cat" then
		local root = child.PrimaryPart or child:FindFirstChild("HumanoidRootPart") or child:FindFirstChildWhichIsA("BasePart")
		if root then
			freezePart(root)
			table.insert(frozenPetPositions, root.Position)
		end
	elseif child:IsA("BasePart") and child.Name == "Zone" and child.Parent and child.Parent.Name == "PetMover" then
		freezePart(child)
	end
end)

-- Teleport SpottedEffect to nearest frozen pet
workspace.ChildAdded:Connect(function(obj)
	if obj:IsA("BasePart") and obj.Name == "SpottedEffect" then
		task.wait() -- Let it initialize
		if #frozenPetPositions > 0 then
			-- Find closest frozen position
			local closest = frozenPetPositions[1]
			local minDist = (obj.Position - closest).Magnitude
			for _, pos in pairs(frozenPetPositions) do
				local dist = (obj.Position - pos).Magnitude
				if dist < minDist then
					minDist = dist
					closest = pos
				end
			end
			obj.Position = closest
		end
	end
end)
